{"version":3,"file":"component---src-templates-blog-template-js-7857dc77214767c34386.js","mappings":"yNAQe,SAASA,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACjBC,EAAmBF,EAAYG,cAAcC,gBAAgBC,MACjE,OACE,gBAAC,IAAD,KACE,uBAAKC,MAAM,YACT,gBAAC,KAAD,CAAMC,UAAU,UAAUC,MAAM,OAAOC,GAAG,SAA1C,UAGA,sBAAIH,MAAM,sBAAsBN,EAAYQ,OAC5C,wBAAMF,MAAM,cAAaI,EAAAA,EAAAA,GAAWV,EAAYW,cAChD,uBAAKC,KAAK,YAAYN,MAAM,OAC1B,gBAAC,IAAD,CAAKC,UAAU,iBAAiBF,MAAOH,IACvC,uBACEI,MAAM,gBACNO,wBAAyB,CAAEC,OAAQb,OAM9C,C,uBChCc,SAASS,EAAWK,GAE/B,OADiB,IAAIC,KAAKD,GACVE,cAAcC,MAAM,KAAK,EAC5C,C","sources":["webpack://connors-website/./src/templates/blogTemplate.js","webpack://connors-website/./src/util/formatDate.js"],"sourcesContent":["import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { TemplateWrapper } from \"../layouts/index\";\r\nimport Img from \"gatsby-image\";\r\nimport Link from \"gatsby-link\";\r\nimport \"../styles/blog.css\";\r\nimport formatDate from \"../util/formatDate\";\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark;\r\n  let featuredImgFluid = frontmatter.featuredImage.childImageSharp.fluid;\r\n  return (\r\n    <TemplateWrapper>\r\n      <div class=\"post mt5\">\r\n        <Link className=\"link f4\" title=\"Blog\" to=\"/blog\">\r\n          &lt; Back\r\n        </Link>\r\n        <h1 class=\"blog-post-title f2\">{frontmatter.title}</h1>\r\n        <span class=\"post-date\">{formatDate(frontmatter.publishDate)}</span>\r\n        <div name=\"post body\" class=\"mt5\">\r\n          <Img className=\"blog-image br3\" fluid={featuredImgFluid} />\r\n          <div\r\n            class=\"blog-text mt5\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </TemplateWrapper>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        publishDate\r\n        featuredImage {\r\n          childImageSharp {\r\n            fluid(maxWidth: 800) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n      fields {\r\n        date\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default function formatDate(date) {\r\n    const yourDate = new Date(date)\r\n    return yourDate.toISOString().split('T')[0]\r\n}\r\n"],"names":["Template","markdownRemark","data","frontmatter","html","featuredImgFluid","featuredImage","childImageSharp","fluid","class","className","title","to","formatDate","publishDate","name","dangerouslySetInnerHTML","__html","date","Date","toISOString","split"],"sourceRoot":""}